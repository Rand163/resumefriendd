/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/src/js/custom/documentation/charts/flotcharts/dynamic.js":
/*!****************************************************************************!*\
  !*** ./resources/src/js/custom/documentation/charts/flotcharts/dynamic.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n // Class definition\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar KTFlotDemoDynamic = function () {\n  // Private functions\n  var exampleDynamic = function exampleDynamic() {\n    var _options;\n\n    var data = [];\n    var totalPoints = 250; // random data generator for plot charts\n\n    function getRandomData() {\n      if (data.length > 0) data = data.slice(1); // do a random walk\n\n      while (data.length < totalPoints) {\n        var prev = data.length > 0 ? data[data.length - 1] : 50;\n        var y = prev + Math.random() * 10 - 5;\n        if (y < 0) y = 0;\n        if (y > 100) y = 100;\n        data.push(y);\n      } // zip the generated y values with the x values\n\n\n      var res = [];\n\n      for (var i = 0; i < data.length; ++i) {\n        res.push([i, data[i]]);\n      }\n\n      return res;\n    } //server load\n\n\n    var options = (_options = {\n      colors: [KTUtil.getCssVariableValue('--bs-active-danger'), KTUtil.getCssVariableValue('--bs-active-primary')],\n      series: {\n        shadowSize: 1\n      },\n      lines: {\n        show: true,\n        lineWidth: 0.5,\n        fill: true,\n        fillColor: {\n          colors: [{\n            opacity: 0.1\n          }, {\n            opacity: 1\n          }]\n        }\n      },\n      yaxis: {\n        min: 0,\n        max: 100,\n        tickColor: KTUtil.getCssVariableValue('--bs-light-dark'),\n        tickFormatter: function tickFormatter(v) {\n          return v + \"%\";\n        }\n      },\n      xaxis: {\n        show: false\n      }\n    }, _defineProperty(_options, \"colors\", [KTUtil.getCssVariableValue('--bs-active-primary')]), _defineProperty(_options, \"grid\", {\n      tickColor: KTUtil.getCssVariableValue('--bs-light-dark'),\n      borderWidth: 0\n    }), _options);\n    var updateInterval = 30;\n    var plot = $.plot($(\"#kt_docs_flot_dynamic\"), [getRandomData()], options);\n\n    function update() {\n      plot.setData([getRandomData()]);\n      plot.draw();\n      setTimeout(update, updateInterval);\n    }\n\n    update();\n  };\n\n  return {\n    // Public Functions\n    init: function init() {\n      exampleDynamic();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTFlotDemoDynamic.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL2N1c3RvbS9kb2N1bWVudGF0aW9uL2NoYXJ0cy9mbG90Y2hhcnRzL2R5bmFtaWMuanMuanMiLCJtYXBwaW5ncyI6IjtDQUVBOzs7O0FBQ0EsSUFBSUEsaUJBQWlCLEdBQUcsWUFBWTtBQUNoQztBQUNBLE1BQUlDLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsR0FBWTtBQUFBOztBQUM3QixRQUFJQyxJQUFJLEdBQUcsRUFBWDtBQUNOLFFBQUlDLFdBQVcsR0FBRyxHQUFsQixDQUZtQyxDQUluQzs7QUFFQSxhQUFTQyxhQUFULEdBQXlCO0FBQ3hCLFVBQUlGLElBQUksQ0FBQ0csTUFBTCxHQUFjLENBQWxCLEVBQXFCSCxJQUFJLEdBQUdBLElBQUksQ0FBQ0ksS0FBTCxDQUFXLENBQVgsQ0FBUCxDQURHLENBRXhCOztBQUNBLGFBQU9KLElBQUksQ0FBQ0csTUFBTCxHQUFjRixXQUFyQixFQUFrQztBQUNqQyxZQUFJSSxJQUFJLEdBQUdMLElBQUksQ0FBQ0csTUFBTCxHQUFjLENBQWQsR0FBa0JILElBQUksQ0FBQ0EsSUFBSSxDQUFDRyxNQUFMLEdBQWMsQ0FBZixDQUF0QixHQUEwQyxFQUFyRDtBQUNBLFlBQUlHLENBQUMsR0FBR0QsSUFBSSxHQUFHRSxJQUFJLENBQUNDLE1BQUwsS0FBZ0IsRUFBdkIsR0FBNEIsQ0FBcEM7QUFDQSxZQUFJRixDQUFDLEdBQUcsQ0FBUixFQUFXQSxDQUFDLEdBQUcsQ0FBSjtBQUNYLFlBQUlBLENBQUMsR0FBRyxHQUFSLEVBQWFBLENBQUMsR0FBRyxHQUFKO0FBQ2JOLFFBQUFBLElBQUksQ0FBQ1MsSUFBTCxDQUFVSCxDQUFWO0FBQ0EsT0FUdUIsQ0FVeEI7OztBQUNBLFVBQUlJLEdBQUcsR0FBRyxFQUFWOztBQUNBLFdBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR1gsSUFBSSxDQUFDRyxNQUF6QixFQUFpQyxFQUFFUSxDQUFuQyxFQUFzQztBQUNyQ0QsUUFBQUEsR0FBRyxDQUFDRCxJQUFKLENBQVMsQ0FBQ0UsQ0FBRCxFQUFJWCxJQUFJLENBQUNXLENBQUQsQ0FBUixDQUFUO0FBQ0E7O0FBRUQsYUFBT0QsR0FBUDtBQUNBLEtBdkJrQyxDQXlCbkM7OztBQUNBLFFBQUlFLE9BQU87QUFDVkMsTUFBQUEsTUFBTSxFQUFFLENBQUNDLE1BQU0sQ0FBQ0MsbUJBQVAsQ0FBMkIsb0JBQTNCLENBQUQsRUFBbURELE1BQU0sQ0FBQ0MsbUJBQVAsQ0FBMkIscUJBQTNCLENBQW5ELENBREU7QUFFVkMsTUFBQUEsTUFBTSxFQUFFO0FBQ1BDLFFBQUFBLFVBQVUsRUFBRTtBQURMLE9BRkU7QUFLVkMsTUFBQUEsS0FBSyxFQUFFO0FBQ05DLFFBQUFBLElBQUksRUFBRSxJQURBO0FBRU5DLFFBQUFBLFNBQVMsRUFBRSxHQUZMO0FBR05DLFFBQUFBLElBQUksRUFBRSxJQUhBO0FBSU5DLFFBQUFBLFNBQVMsRUFBRTtBQUNWVCxVQUFBQSxNQUFNLEVBQUUsQ0FBQztBQUNSVSxZQUFBQSxPQUFPLEVBQUU7QUFERCxXQUFELEVBRUw7QUFDRkEsWUFBQUEsT0FBTyxFQUFFO0FBRFAsV0FGSztBQURFO0FBSkwsT0FMRztBQWlCVkMsTUFBQUEsS0FBSyxFQUFFO0FBQ05DLFFBQUFBLEdBQUcsRUFBRSxDQURDO0FBRU5DLFFBQUFBLEdBQUcsRUFBRSxHQUZDO0FBR05DLFFBQUFBLFNBQVMsRUFBRWIsTUFBTSxDQUFDQyxtQkFBUCxDQUEyQixpQkFBM0IsQ0FITDtBQUlOYSxRQUFBQSxhQUFhLEVBQUUsdUJBQVNDLENBQVQsRUFBWTtBQUMxQixpQkFBT0EsQ0FBQyxHQUFHLEdBQVg7QUFDQTtBQU5LLE9BakJHO0FBeUJWQyxNQUFBQSxLQUFLLEVBQUU7QUFDTlgsUUFBQUEsSUFBSSxFQUFFO0FBREE7QUF6QkcsMkNBNEJGLENBQUNMLE1BQU0sQ0FBQ0MsbUJBQVAsQ0FBMkIscUJBQTNCLENBQUQsQ0E1QkUscUNBNkJKO0FBQ0xZLE1BQUFBLFNBQVMsRUFBRWIsTUFBTSxDQUFDQyxtQkFBUCxDQUEyQixpQkFBM0IsQ0FETjtBQUVMZ0IsTUFBQUEsV0FBVyxFQUFFO0FBRlIsS0E3QkksWUFBWDtBQW1DQSxRQUFJQyxjQUFjLEdBQUcsRUFBckI7QUFDQSxRQUFJQyxJQUFJLEdBQUdDLENBQUMsQ0FBQ0QsSUFBRixDQUFPQyxDQUFDLENBQUMsdUJBQUQsQ0FBUixFQUFtQyxDQUFDaEMsYUFBYSxFQUFkLENBQW5DLEVBQXNEVSxPQUF0RCxDQUFYOztBQUVBLGFBQVN1QixNQUFULEdBQWtCO0FBQ2pCRixNQUFBQSxJQUFJLENBQUNHLE9BQUwsQ0FBYSxDQUFDbEMsYUFBYSxFQUFkLENBQWI7QUFDQStCLE1BQUFBLElBQUksQ0FBQ0ksSUFBTDtBQUNBQyxNQUFBQSxVQUFVLENBQUNILE1BQUQsRUFBU0gsY0FBVCxDQUFWO0FBQ0E7O0FBRURHLElBQUFBLE1BQU07QUFDSCxHQXZFRDs7QUF5RUEsU0FBTztBQUNIO0FBQ0FJLElBQUFBLElBQUksRUFBRSxnQkFBWTtBQUNkeEMsTUFBQUEsY0FBYztBQUNqQjtBQUpFLEdBQVA7QUFNSCxDQWpGdUIsRUFBeEIsRUFtRkE7OztBQUNBZSxNQUFNLENBQUMwQixrQkFBUCxDQUEwQixZQUFZO0FBQ2xDMUMsRUFBQUEsaUJBQWlCLENBQUN5QyxJQUFsQjtBQUNILENBRkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3JjL2pzL2N1c3RvbS9kb2N1bWVudGF0aW9uL2NoYXJ0cy9mbG90Y2hhcnRzL2R5bmFtaWMuanM/OWQ0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbi8vIENsYXNzIGRlZmluaXRpb25cclxudmFyIEtURmxvdERlbW9EeW5hbWljID0gZnVuY3Rpb24gKCkge1xyXG4gICAgLy8gUHJpdmF0ZSBmdW5jdGlvbnNcclxuICAgIHZhciBleGFtcGxlRHluYW1pYyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZGF0YSA9IFtdO1xyXG5cdFx0dmFyIHRvdGFsUG9pbnRzID0gMjUwO1xyXG5cclxuXHRcdC8vIHJhbmRvbSBkYXRhIGdlbmVyYXRvciBmb3IgcGxvdCBjaGFydHNcclxuXHJcblx0XHRmdW5jdGlvbiBnZXRSYW5kb21EYXRhKCkge1xyXG5cdFx0XHRpZiAoZGF0YS5sZW5ndGggPiAwKSBkYXRhID0gZGF0YS5zbGljZSgxKTtcclxuXHRcdFx0Ly8gZG8gYSByYW5kb20gd2Fsa1xyXG5cdFx0XHR3aGlsZSAoZGF0YS5sZW5ndGggPCB0b3RhbFBvaW50cykge1xyXG5cdFx0XHRcdHZhciBwcmV2ID0gZGF0YS5sZW5ndGggPiAwID8gZGF0YVtkYXRhLmxlbmd0aCAtIDFdIDogNTA7XHJcblx0XHRcdFx0dmFyIHkgPSBwcmV2ICsgTWF0aC5yYW5kb20oKSAqIDEwIC0gNTtcclxuXHRcdFx0XHRpZiAoeSA8IDApIHkgPSAwO1xyXG5cdFx0XHRcdGlmICh5ID4gMTAwKSB5ID0gMTAwO1xyXG5cdFx0XHRcdGRhdGEucHVzaCh5KTtcclxuXHRcdFx0fVxyXG5cdFx0XHQvLyB6aXAgdGhlIGdlbmVyYXRlZCB5IHZhbHVlcyB3aXRoIHRoZSB4IHZhbHVlc1xyXG5cdFx0XHR2YXIgcmVzID0gW107XHJcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7ICsraSkge1xyXG5cdFx0XHRcdHJlcy5wdXNoKFtpLCBkYXRhW2ldXSk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiByZXM7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly9zZXJ2ZXIgbG9hZFxyXG5cdFx0dmFyIG9wdGlvbnMgPSB7XHJcblx0XHRcdGNvbG9yczogW0tUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLWFjdGl2ZS1kYW5nZXInKSwgS1RVdGlsLmdldENzc1ZhcmlhYmxlVmFsdWUoJy0tYnMtYWN0aXZlLXByaW1hcnknKV0sXHJcblx0XHRcdHNlcmllczoge1xyXG5cdFx0XHRcdHNoYWRvd1NpemU6IDFcclxuXHRcdFx0fSxcclxuXHRcdFx0bGluZXM6IHtcclxuXHRcdFx0XHRzaG93OiB0cnVlLFxyXG5cdFx0XHRcdGxpbmVXaWR0aDogMC41LFxyXG5cdFx0XHRcdGZpbGw6IHRydWUsXHJcblx0XHRcdFx0ZmlsbENvbG9yOiB7XHJcblx0XHRcdFx0XHRjb2xvcnM6IFt7XHJcblx0XHRcdFx0XHRcdG9wYWNpdHk6IDAuMVxyXG5cdFx0XHRcdFx0fSwge1xyXG5cdFx0XHRcdFx0XHRvcGFjaXR5OiAxXHJcblx0XHRcdFx0XHR9XVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSxcclxuXHRcdFx0eWF4aXM6IHtcclxuXHRcdFx0XHRtaW46IDAsXHJcblx0XHRcdFx0bWF4OiAxMDAsXHJcblx0XHRcdFx0dGlja0NvbG9yOiBLVFV0aWwuZ2V0Q3NzVmFyaWFibGVWYWx1ZSgnLS1icy1saWdodC1kYXJrJyksXHJcblx0XHRcdFx0dGlja0Zvcm1hdHRlcjogZnVuY3Rpb24odikge1xyXG5cdFx0XHRcdFx0cmV0dXJuIHYgKyBcIiVcIjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sXHJcblx0XHRcdHhheGlzOiB7XHJcblx0XHRcdFx0c2hvdzogZmFsc2UsXHJcblx0XHRcdH0sXHJcblx0XHRcdGNvbG9yczogW0tUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLWFjdGl2ZS1wcmltYXJ5JyldLFxyXG5cdFx0XHRncmlkOiB7XHJcblx0XHRcdFx0dGlja0NvbG9yOiBLVFV0aWwuZ2V0Q3NzVmFyaWFibGVWYWx1ZSgnLS1icy1saWdodC1kYXJrJyksXHJcblx0XHRcdFx0Ym9yZGVyV2lkdGg6IDAsXHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdFx0dmFyIHVwZGF0ZUludGVydmFsID0gMzA7XHJcblx0XHR2YXIgcGxvdCA9ICQucGxvdCgkKFwiI2t0X2RvY3NfZmxvdF9keW5hbWljXCIpLCBbZ2V0UmFuZG9tRGF0YSgpXSwgb3B0aW9ucyk7XHJcblxyXG5cdFx0ZnVuY3Rpb24gdXBkYXRlKCkge1xyXG5cdFx0XHRwbG90LnNldERhdGEoW2dldFJhbmRvbURhdGEoKV0pO1xyXG5cdFx0XHRwbG90LmRyYXcoKTtcclxuXHRcdFx0c2V0VGltZW91dCh1cGRhdGUsIHVwZGF0ZUludGVydmFsKTtcclxuXHRcdH1cclxuXHJcblx0XHR1cGRhdGUoKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIC8vIFB1YmxpYyBGdW5jdGlvbnNcclxuICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGV4YW1wbGVEeW5hbWljKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufSgpO1xyXG5cclxuLy8gT24gZG9jdW1lbnQgcmVhZHlcclxuS1RVdGlsLm9uRE9NQ29udGVudExvYWRlZChmdW5jdGlvbiAoKSB7XHJcbiAgICBLVEZsb3REZW1vRHluYW1pYy5pbml0KCk7XHJcbn0pO1xyXG4iXSwibmFtZXMiOlsiS1RGbG90RGVtb0R5bmFtaWMiLCJleGFtcGxlRHluYW1pYyIsImRhdGEiLCJ0b3RhbFBvaW50cyIsImdldFJhbmRvbURhdGEiLCJsZW5ndGgiLCJzbGljZSIsInByZXYiLCJ5IiwiTWF0aCIsInJhbmRvbSIsInB1c2giLCJyZXMiLCJpIiwib3B0aW9ucyIsImNvbG9ycyIsIktUVXRpbCIsImdldENzc1ZhcmlhYmxlVmFsdWUiLCJzZXJpZXMiLCJzaGFkb3dTaXplIiwibGluZXMiLCJzaG93IiwibGluZVdpZHRoIiwiZmlsbCIsImZpbGxDb2xvciIsIm9wYWNpdHkiLCJ5YXhpcyIsIm1pbiIsIm1heCIsInRpY2tDb2xvciIsInRpY2tGb3JtYXR0ZXIiLCJ2IiwieGF4aXMiLCJib3JkZXJXaWR0aCIsInVwZGF0ZUludGVydmFsIiwicGxvdCIsIiQiLCJ1cGRhdGUiLCJzZXREYXRhIiwiZHJhdyIsInNldFRpbWVvdXQiLCJpbml0Iiwib25ET01Db250ZW50TG9hZGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/src/js/custom/documentation/charts/flotcharts/dynamic.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/src/js/custom/documentation/charts/flotcharts/dynamic.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;